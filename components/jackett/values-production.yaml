service:
  main:
    ports:
      http:
        port: 9117

ingress:
  main:
    enabled: false

persistence:
  config:
    enabled: false
    # existingClaim:  # your-claim
    # subPath:  # some-subpath
    # storageClass: nfs-client
    # accessMode: ReadWriteOnce
    # size: 1Gi
    # retain: true

  torrentblackhole:
    enabled: false
    mountPath: /downloads

volumeClaimTemplates:
- name: jackett
  mountPath: /config
  accessMode: "ReadWriteOnce"
  storageClass: nfs-client
  size: 1Gi
# - name: backup
#   mountPath: /backup
#   subPath: theSubPath
#   accessMode: "ReadWriteOnce"
#   size: 2Gi
#   storageClass: cheap-storage-class

controller:
  enabled: true
  type: statefulset



ingress:
  main:
    enabled: true
    primary: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.raelix.com/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.raelix.com/oauth2/start"
      nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email"
      ingress.kubernetes.io/force-ssl-redirect: "true"
      ingress.kubernetes.io/proxy-body-size: "1024m"
      nginx.ingress.kubernetes.io/proxy-body-size: "1024m"

    # ingressClassName: nginx

    hosts:
    - host: jackett.raelix.com
      paths:
      - path: /
        pathType: Prefix

    tls:
    - secretName: jackett-raelix-com
      hosts:
      - jackett.raelix.com